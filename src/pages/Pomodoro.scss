//All about the colors
$dark-blue: #18152B;
$primary-white: #eeeeff;
$primary-dark: #111111;
$primary-blue: #7464FB;
$empty-dark: #302b53;
$primary-gray: #ffffff38;
//All about the fonts
@font-face {
    font-family: MetropolisBold;
    src: url(../fonts/MetropolisBold.otf);
}

@font-face {
    font-family: MetropolisRegular;
    src: url(../fonts/MetropolisRegular.otf);
}

@font-face {
    font-family: MetropolisThin;
    src: url(../fonts/MetropolisThin.otf);
}

@font-face {
    font-family: PlatNomor;
    src: url(../fonts/PlatNomor.otf);
}

// All about the mixins
@mixin flex-container($direction, $align, $justify, $wrap) {
    display: flex;
    flex-wrap: $wrap;
    flex-direction: $direction;
    align-items: $align;
    justify-content: $justify;
}

@mixin button-component($bg-color, $text-color) {
    background-color: $bg-color;
    color: $text-color;
}

@mixin container-width($cont-width) {
    width: 100%;
    max-width: $cont-width;
    margin: 0 auto;
    padding: 0px 20px;
}

// Different Classes
.container-1000 {
    @include container-width(1000px);
}

.container-1200 {
    @include container-width(1200px);
}

.container-1400 {
    @include container-width(1400px);
}

@function strip-unit($value) {
    @return $value / ($value * 0 + 1);
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
    $u1: unit($min-vw);
    $u2: unit($max-vw);
    $u3: unit($min-font-size);
    $u4: unit($max-font-size);
    @if $u1==$u2 and $u1==$u3 and $u1==$u4 {
        & {
            font-size: $min-font-size;
            @media screen and (min-width: $min-vw) {
                font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
            }
            @media screen and (min-width: $max-vw) {
                font-size: $max-font-size;
            }
        }
    }
}

// All related to svg
svg {
    cursor: pointer;
}

.filler-line {
    width: 100%;
    height: 1px;
    background-color: $primary-gray;
    margin: 10px 0;
}

h1 {
    font-family: "PlatNomor";
    @include fluid-type(1200px, 320px, 35px, 70px);
}

h2 {
    font-family: "MetropolisBold";
}

h3,
h4,
h5,
h6,
p,
label,
input,
button,
select,
option {
    font-family: "MetropolisThin";
    @include fluid-type(1200px, 320px, 17px, 19px);
}

input {
    color: $primary-white;
}

.btn {
    color: #eeeeff;
    padding: 15px 60px;
    display: inline-block;
    cursor: pointer;
    &-configure {
        border: 2px solid $primary-blue;
    }
}

//Make the Configure Button Bold
.btn,
btn-icon {
    padding: 10px 45px;
    background-color: $empty-dark;
}

// Links Styling
//Real Styling
body {
    background-color: $dark-blue;
    color: $primary-white;
}

//Styling the app section
.main__page {
    min-height: 100vh;
    height: 100%;
    width: 100vw;
    @include flex-container(column, stretch, space-between, no-wrap);
}

//Styling the Main Section
.main__section {
    @include flex-container(row, center, center, wrap);
    padding: 70px;
    >div {
        @include flex-container(column, center, center, wrap);
    }
    &--icons {
        @include flex-container(row, center, center, no-wrap);
        @media screen and (max-width: 365px) {
            flex-direction: column;
        }
        &>div {
            cursor: pointer;
            margin: 10px;
            >div {
                padding: 15px;
                background-color: $empty-dark;
            }
        }
        .btn-restart {
            padding: 15px;
            background-color: $empty-dark;
        }
    }
}

//Styling Configure Section
.configure__section {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    @include flex-container(row, center, center, wrap);
    background-color: $dark-blue;
    min-height: 100vh;
    height: 100%;
    &--box {
        padding: 45px;
        background-color: $empty-dark;
        width: 50vw;
        @media screen and (max-width: 1200px) {
            width: 60vw;
        }
        @media screen and (max-width:950px) {
            width: 70vw;
        }
        @media screen and (max-width:700px) {
            width: 80vw;
        }
        @media screen and (max-width:580px) {
            width: 95vw;
        }
        &-upper {
            @include flex-container(row, center, space-between, no-wrap);
        }
    }
    &--form {
        label {
            padding: 15px 0;
        }
        &-btn {
            text-align: center;
            margin-top: 40px;
        }
    }
}

// All related to the Input field
label {
    display: block;
}

input,
select {
    width: 100%;
    background-color: transparent;
    outline: none;
    border: 1px solid $dark-blue;
    padding: 15px;
    color: $primary-white;
}

option {
    color: $primary-white;
    background-color: $primary-white;
    margin: 5px 0;
    padding: 20px;
    border: none;
}

.submit-btn {
    background-color: $primary-blue;
    color: $primary-white;
    font-family: MetropolisBold;
}

.base__timer {
    position: relative;
    height: 300px;
    width: 300px;
    &--svg {
        fill: none;
        stroke: none;
        transform: scaleX(-1);
    }
    &--path-elapsed {
        stroke-width: 5px;
        stroke: $primary-blue;
        fill: none;
    }
    &--label {
        position: absolute;
        width: 300px;
        height: 300px;
        top: 0;
        @include flex-container(column, center, center, no-wrap);
        h1 {
            margin: 30px 0px 30px;
            text-align: center;
            color: $primary-white;
        }
        p {
            color: $primary-white;
            text-align: center;
        }
    }
}